name: Publish Release 

on:
  push:
    branches:
      - "release/*"

jobs:
  publish:
    name: Publish a new version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.6.0
          run_install: false

      - uses: actions/setup-node@v3
        with:
          node-version: 16.17.x
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - name: Install Dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts


      - name: Check Version
        id: version
        uses: ./
        with:
          failIfNotValidNew: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
        with:
          tag_name: v${{ steps.version.outputs.targetVersion }}
          release_name: Release v${{ steps.version.outputs.targetVersion }}
          body: |
            Generated Release v${{ steps.version.outputs.targetVersion }}
          draft: false
          prerelease: ${{ steps.pkgVersion.outputs.targetIsPrerelease }}

      - name: Apply latest/prerelease tag
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}          
          script: |
            var tag = ("${{ steps.pkgVersion.outputs.targetIsPrerelease }}" === "true" ? "${{ steps.pkgVersion.outputs.targetPrerelease }}" : "latest");
            try{
              await github.git.deleteRef({
                owner: context.repo.owner,
                repo: context.repo.repo,
                ref: "tags/" + tag
              });
              console.info(`removed tag '${tag}'`);
            } catch{}

             await github.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + tag,
              sha: context.sha
            });
            console.info(`added tag '${tag}' @ ${context.sha}`);
